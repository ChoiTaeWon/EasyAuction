<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- namespace : 패키지명.클래스이름 을 논리적으로 선언 -->
<mapper namespace="com.easyauction.mapper.MessageMapper">

	<sql id="messagecolumns">
		MSGNO,
		MSGSENDERDELETE,
		MSGRECEIVERDELETE,
		MSGCONTENT,
		MSGTITLE,
		MSGDATE,
		MSGSENDER,
		MSGRECEIVER,
		MSGREADCHECK
		</sql>
<!-- mybatis-config.xml에 alias으로 Dto로 정의 해두면 resultType="Member" 접근 가능 함.  
	만약  resultMap로 설정했을경우 resultMap="Member"로 접근 -->
	<!-- <select id="getMemberByIdAndPasswd" parameterType="hashMap" resultType="Member">
		SELECT * FROM member 
		WHERE mbId = #{mbId} 
		AND 
		mbPasswd = #{mbPasswd}
	</select>  -->
<!-- <select id="getMsgReceiveList" parameterType="String" resultType="Message">
		SELECT 
	   		<include refid="messagecolumns" />
	   	FROM
	   	(			
	   		SELECT
	   			rownum idx, s.* 
	   		FROM
	   		(			   
	   			SELECT
		   			<include refid="messagecolumns" />
		   		FROM 
		   			Message 
		   		WHERE MSGRECEIVERDELETE = 0 AND MSGRECEIVER Like #{mbId} 
		   		ORDER BY 
		   			msgNo DESC
	   		) s	   
	   	)
	   	WHERE 
	   		idx &amp; 0 AND idx &lt; 10
</select> -->
<select id="getMsgReceiveList" parameterType="String" resultType="Message">
	   			SELECT 
	   				<include refid="messagecolumns" /> 
		   		FROM 
		   			Message 
		   		WHERE MSGRECEIVERDELETE = 0 AND MSGRECEIVER Like #{mbId} 
		   		ORDER BY 
		   			msgNo DESC
</select>
<select id="getMsgSenderList" parameterType="String" resultType="Message">
	   			SELECT 
	   				<include refid="messagecolumns" /> 
		   		FROM 
		   			Message 
		   		WHERE MSGSENDERDELETE = 0 AND MSGSENDER Like #{mbId} 
		   		ORDER BY 
		   			msgNo DESC
</select>
<select id="getMsgBymsgNo" parameterType="integer" resultType="Message">
	   			SELECT 
	   				<include refid="messagecolumns" /> 
		   		FROM 
		   			Message 
		   		WHERE MSGSENDERDELETE = 0 AND MSGNO = #{msgNo} 
</select>

<insert id="setSendMessage" 
		parameterType="Message">
			INSERT INTO Message (
			MSGNO,
			MSGCONTENT,
			MSGTITLE,
			MSGSENDER,
			MSGRECEIVER
		) VALUES (
			SEQUENCEMESSAGENO.nextval, 
			#{msgContent},
			#{msgTitle},
			#{msgSender},
			#{msgReceiver})
</insert>
<update id="deleteMsgBymsgNo" parameterType="hashMap">
	update Message set 
	<choose>
		<when test="pageId == 'sendmessages'">
			MSGSENDERDELETE = 1
		</when>
		<otherwise>
			MSGRECEIVERDELETE = 1
		</otherwise>
	</choose>
	WHERE msgNo = #{ msgNo }
</update>
<update id="setReadMsgBymsgNo" parameterType="integer">
	update Message set MSGREADCHECK = 1	WHERE msgNo = #{ msgNo }
</update>
<select id="getMessageCountBymbId" parameterType="String" resultType="integer">
	   			SELECT 
	   				COUNT(*) 
		   		FROM 
		   			Message 
		   		WHERE MSGRECEIVER = #{mbId} AND MSGREADCHECK = 0
</select>

</mapper>
