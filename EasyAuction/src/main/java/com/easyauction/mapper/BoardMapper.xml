<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.easyauction.mapper.BoardMapper">
	<resultMap type="Board" id="boardResult">
		<id column="bdno" property="bdNo" />
		<result column="bdtype" property="bdType" />
		<result column="bdcontent" property="bdContent" />
		<result column="bdwriter" property="bdWriter" />
		<result column="bdtitle" property="bdTitle" />
		<result column="bdreadcount" property="bdReadCount" />
		<result column="bddate" property="bdDate" />
		<result column="bdreportingcount" property="bdReportingCount" />
		<result column="bdblindcheck" property="bdBlindCheck" />
		<collection property="boardImage" column="bdno" select="getImageByBoardNo" />
		<collection property="comments" column="bdno" select="getCommentByBoardNo" />
	</resultMap>
	
	<resultMap type="boardImage" id="imageResult">
		<id column="bdimgno" property="bdimgNo"/>
		<result column="bdimgname" property="bdImgName" />
		<result column="bdno" property="bdNo" />
		<result column="bdimgregdate" property="bdImgRegdate" />
	</resultMap>
	
	<resultMap type="boardComment" id="commentResult">
		<id column="bcno" property="bcNo" />
		<result column="bccontent" property="bcContent" />
		<result column="bdno" property="bdNo" />
		<result column="bcwriter" property="bcWriter" />
		<result column="bcregdate" property="bcRegdate" />
	</resultMap>
	
	<insert id="insertFreeBoard" parameterType="Board" >
	  <selectKey keyProperty="bdNo" order="AFTER" resultType="int" >
	  	select SEQUENCEBORADNO.currval from dual
	  </selectKey>
		INSERT INTO board(bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bdreportingcount)  
		       VALUES(SEQUENCEBORADNO.nextVal, 2, #{ bdContent }, #{ bdWriter }, #{ bdTitle }, #{ bdReadCount }, #{ bdReportingCount })
	</insert>
	
	<insert id="insertGongjiBoard" parameterType="Board" >
	  <selectKey keyProperty="bdNo" order="AFTER" resultType="int" >
	  	select SEQUENCEBORADNO.currval from dual
	  </selectKey>
		INSERT INTO board(bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bdreportingcount)  
		       VALUES(SEQUENCEBORADNO.nextVal, 1, #{ bdContent }, #{ bdWriter }, #{ bdTitle }, #{ bdReadCount }, #{ bdReportingCount })
	</insert>
	
	<insert id="insertPhoto" parameterType="Board" >
	  <selectKey keyProperty="bdNo" order="AFTER" resultType="int" >
	  	select SEQUENCEBORADNO.currval from dual
	  </selectKey>
		INSERT INTO board(bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bdreportingcount)  
		       VALUES(SEQUENCEBORADNO.nextVal, 3, #{ bdContent }, #{ bdWriter }, #{ bdTitle }, #{ bdReadCount }, #{ bdReportingCount })
	</insert>
	
	<insert id="insertPhotoImage" parameterType="boardImage">
		INSERT INTO BOARDIMAGE(bdimgno, bdimgname, bdno)
			VALUES(SEQUENCEBORADIMG.nextVal, #{ bdImgName }, #{ bdNo })
	</insert>
	
	<insert id="insertComment" parameterType="BoardComment">
		INSERT INTO BOARDCOMMENT(bcno, bccontent, bdno, bcwriter)
			VALUES(SEQUENCEBORADCOMMENTNO.nextVal, #{ bcContent }, #{ bdNo }, #{ bcWriter })
	</insert>
	
	<select id="getPhotoList" resultMap="boardResult">
		SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdreportingcount
		FROM Board
		ORDER BY 
			bdno DESC
	</select>
	
	<select id="getFreeBoardList" resultMap="boardResult">
		SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdreportingcount
		FROM Board
		ORDER BY 
			bdno DESC
	</select>
	
	<select id="getGongjiList" resultMap="boardResult">
		SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdreportingcount
		FROM Board
		ORDER BY 
			bdno DESC
	</select>
	
	<select id="getImageByBoardNo" resultMap="imageResult" parameterType="int">
		select bdimgno, bdimgname, bdno
		from BOARDIMAGE
		where bdno = #{ bdNo }
	</select>
	
 	<select id="getPhotoViewByBoardNo" resultMap="boardResult" parameterType="int">
		SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdreportingcount
		FROM Board
		where bdno = #{ bdNo }
	</select>
	
	<select id="getCommentByBoardNo" resultMap="commentResult" parameterType="int">
		SELECT
			bcno, bccontent, bdno, bcwriter, bcregdate
		FROM BOARDCOMMENT
		where bdno = #{ bdNo }				
	</select>
	
	<select id="getFreeBoardViewByBoardNo" resultMap="boardResult" parameterType="int">
		SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdreportingcount
		FROM Board
		where bdno = #{ bdNo }
	</select>
	
	<select id="getGongjiBoardViewByBoardNo" resultMap="boardResult" parameterType="int">
		SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdreportingcount
		FROM Board
		where bdno = #{ bdNo }
	</select>
	
	<insert id="insertFreeBoardComment" parameterType="BoardComment">
		INSERT INTO BOARDCOMMENT(bcno, bccontent, bdno, bcwriter)
			VALUES(SEQUENCEBORADCOMMENTNO.nextVal, #{ bcContent }, #{ bdNo }, #{ bcWriter })
	</insert>
	
	<insert id="insertGongjiBoardComment" parameterType="BoardComment">
		INSERT INTO BOARDCOMMENT(bcno, bccontent, bdno, bcwriter)
			VALUES(SEQUENCEBORADCOMMENTNO.nextVal, #{ bcContent }, #{ bdNo }, #{ bcWriter })
	</insert>
	
	<select id="UpdateFreeBoardComment" parameterType="BoardComment">
		UPDATE board SET 
		bc_content = #{bcContent},
		bd_no = #{bdNo},
		bc_writer = #{bcWriter} WHERE bc_no = #{bcNo}
	</select>
	
	<update id="DeletedFreeBoardComment" parameterType="integer">
	DELETE FROM BOARD WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!--
	<select id="getMemberSearchListBySomething" parameterType="Member"
		resultMap="memberResult">
		SELECT <include refid="membercolumns" />
			FROM member
		<trim prefix="where" prefixOverrides="AND | OR">
				<if test="memberNo != 0">
					MEMBER_NO LIKE '%'|| #{memberNo} ||'%'
				</if>
				<if test="memberId != null">
					AND MEMBER_ID LIKE '%'|| #{memberId} ||'%'
				</if>
				<if test="memberName != null">
					AND MEMBER_NAME LIKE '%'||  #{memberName} ||'%'
				</if>

		</trim>
		ORDER BY Member_No DESC
	</select>
	
	<select id="getMemberCountById"
		parameterType="string"
		resultType="integer">
		SELECT COUNT(member_id) 
		FROM member 
		WHERE member_id = #{memberId}
	</select> -->
	
</mapper>
