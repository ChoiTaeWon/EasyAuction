<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.easyauction.mapper.BoardMapper">
	<resultMap type="Board" id="boardResult">
		<id column="bdno" property="bdNo" />
		<result column="bdtype" property="bdType" />
		<result column="bdcontent" property="bdContent" />
		<result column="bdwriter" property="bdWriter" />
		<result column="bdtitle" property="bdTitle" />
		<result column="bdreadcount" property="bdReadCount" />
		<result column="bddate" property="bdDate" />
		<result column="bdreportingcount" property="bdReportingCount" />
		<result column="bdblindcheck" property="bdBlindCheck" />
		<collection property="boardImage" column="bdno" select="getImageByBoardNo" />
		<collection property="comments" column="bdno" select="getCommentByBoardNo" />
	</resultMap>
	
	<resultMap type="boardImage" id="imageResult">
		<id column="bdimgno" property="bdimgNo"/>
		<result column="bdimgname" property="bdImgName" />
		<result column="bdno" property="bdNo" />
		<result column="bdimgregdate" property="bdImgRegdate" />
	</resultMap>
	
	<resultMap type="boardComment" id="commentResult">
		<id column="bcno" property="bcNo" />
		<result column="bccontent" property="bcContent" />
		<result column="bdno" property="bdNo" />
		<result column="bcwriter" property="bcWriter" />
		<result column="bcregdate" property="bcRegdate" />
	</resultMap>
	
	<sql id="boardcolumns">
		bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdblindcheck </sql>
	
	<insert id="insertFreeBoard" parameterType="Board" >
	  <selectKey keyProperty="bdNo" order="AFTER" resultType="int" >
	  	select SEQUENCEBORADNO.currval from dual
	  </selectKey>
		INSERT INTO board(bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bdreportingcount)  
		       VALUES(SEQUENCEBORADNO.nextVal, 2, #{ bdContent }, #{ bdWriter }, #{ bdTitle }, #{ bdReadCount }, #{ bdReportingCount })
	</insert>
	
	<insert id="insertGongjiBoard" parameterType="Board" >
	  <selectKey keyProperty="bdNo" order="AFTER" resultType="int" >
	  	select SEQUENCEBORADNO.currval from dual
	  </selectKey>
		INSERT INTO board(bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bdreportingcount)  
		       VALUES(SEQUENCEBORADNO.nextVal, 1, #{ bdContent }, #{ bdWriter }, #{ bdTitle }, #{ bdReadCount }, #{ bdReportingCount })
	</insert>
	
	<insert id="insertPhoto" parameterType="Board" >
	  <selectKey keyProperty="bdNo" order="AFTER" resultType="int" >
	  	select SEQUENCEBORADNO.currval from dual
	  </selectKey>
		INSERT INTO board(bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bdreportingcount)  
		       VALUES(SEQUENCEBORADNO.nextVal, 3, #{ bdContent }, #{ bdWriter }, #{ bdTitle }, #{ bdReadCount }, #{ bdReportingCount })
	</insert>
	
	<insert id="insertPhotoImage" parameterType="boardImage">
		INSERT INTO BOARDIMAGE(bdimgno, bdimgname, bdno)
			VALUES(SEQUENCEBORADIMG.nextVal, #{ bdImgName }, #{ bdNo })
	</insert>
	
	<insert id="insertComment" parameterType="BoardComment">
		INSERT INTO BOARDCOMMENT(bcno, bccontent, bdno, bcwriter)
			VALUES(SEQUENCEBORADCOMMENTNO.nextVal, #{ bcContent }, #{ bdNo }, #{ bcWriter })
	</insert>
	
	<select id="getPhotoList" resultMap="boardResult">
		SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdreportingcount
		FROM Board
		where bdtype = 3
		ORDER BY 
			bdno DESC
	</select>
	
	<select id="getFreeBoardList" parameterType="hashMap" resultMap="boardResult">
 	SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdblindcheck
 	FROM 
 		(
 			SELECT 
 				rownum idx, s.*
 			FROM (
 				SELECT 
 					bdno, bdtype, bdcontent, bdwriter, bdtitle,
 					bdreadcount, bddate, bdreportingcount, bdblindcheck
				FROM 
					board WHERE bdtype = #{ bdtype }
 				ORDER BY 
 					bdno DESC
 				)s	
 		)
 	WHERE
 		idx &gt;= #{ first } AND idx &lt; #{ last } AND bdtype = #{ bdtype }
 	</select>
	
	<select id="getFreeBoardSearchList" parameterType="hashMap" resultMap="boardResult">
		SELECT
				bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdblindcheck
	 	FROM 
	 		(
	 			SELECT 
	 				rownum idx, s.*
	 			FROM (
	 				SELECT 
	 					bdno, bdtype, bdcontent, bdwriter, bdtitle,
	 					bdreadcount, bddate, bdreportingcount, bdblindcheck
					FROM 
						board WHERE bdtype = #{ bdtype } 
						<if test="search == 'bdWriter'">
							AND bdWriter LIKE '%'|| #{searchdata} ||'%'
						</if>
						<if test="search == 'bdTitle'">
							AND bdTitle LIKE '%'||  #{searchdata} ||'%'
						</if>
	 				ORDER BY 
	 					bdno DESC
	 				)s	
	 		)
	 	WHERE
 		idx &gt;= #{ first } AND idx &lt; #{ last } AND bdtype = #{ bdtype }
	</select>
	
	<select id="getGongjiBoardSearchList" parameterType="hashMap" resultMap="boardResult">
		SELECT <include refid="boardcolumns" />
			FROM board
		<trim prefix="where" prefixOverrides="AND | OR">
				<if test="search == 'bdNo'">
					bdNo LIKE '%'|| #{searchdata} ||'%'
				</if>
				<if test="search == 'bdWriter'">
					AND bdWriter LIKE '%'|| #{searchdata} ||'%'
				</if>
				<if test="search == 'bdTitle'">
					AND bdTitle LIKE '%'||  #{searchdata} ||'%'
				</if>

		</trim>
		ORDER BY bdno DESC
	</select>
	<select id="gongiTypeOne" resultMap="boardResult">
		select 
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdblindcheck
		from board
		where bdtype = 1 and bdblindcheck = 0
	</select>
	<select id="getGongjiList" parameterType="hashMap" resultMap="boardResult">
 	SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdblindcheck
 	FROM 
 		(
 			SELECT 
 				rownum idx, s.*
 			FROM (
 				SELECT 
 					bdno, bdtype, bdcontent, bdwriter, bdtitle,
 					bdreadcount, bddate, bdreportingcount, bdblindcheck
				FROM 
					board
 				ORDER BY 
 					bdno DESC
 				)s	
 		)
 	WHERE
 		idx &gt;= #{ first } AND idx &lt; #{ last }
 	</select>
	
	
	<select id="getImageByBoardNo" resultMap="imageResult" parameterType="int">
		select bdimgno, bdimgname, bdno
		from BOARDIMAGE
		where bdno = #{ bdNo }
	</select>
	
 	<select id="getPhotoViewByBoardNo" resultMap="boardResult" parameterType="int">
		SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdreportingcount
		FROM Board
		where bdno = #{ bdNo }
	</select>
	
	<select id="getCommentByBoardNo" resultMap="commentResult" parameterType="int">
		SELECT
			bcno, bccontent, bdno, bcwriter, bcregdate
		FROM BOARDCOMMENT
		where bdno = #{ bdNo }				
	</select>
	
	<select id="getFreeBoardViewByBoardNo" resultMap="boardResult" parameterType="int">
		SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdreportingcount
		FROM Board
		where bdno = #{ bdNo }
	</select>
	
	<select id="getGongjiBoardViewByBoardNo" resultMap="boardResult" parameterType="int">
		SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdreportingcount
		FROM Board
		where bdno = #{ bdNo }
	</select>
	
	<insert id="insertFreeBoardComment" parameterType="BoardComment">
		INSERT INTO BOARDCOMMENT(bcno, bccontent, bdno, bcwriter)
			VALUES(SEQUENCEBORADCOMMENTNO.nextVal, #{ bcContent }, #{ bdNo }, #{ bcWriter })
	</insert>
	
	<insert id="insertGongjiBoardComment" parameterType="BoardComment">
		INSERT INTO BOARDCOMMENT(bcno, bccontent, bdno, bcwriter)
			VALUES(SEQUENCEBORADCOMMENTNO.nextVal, #{ bcContent }, #{ bdNo }, #{ bcWriter })
	</insert>
	
	<update id="updateFreeBoardComment" parameterType="hashMap">
 	UPDATE 
 		boardcomment
 	SET 
 		bccontent = #{ bcContent } 
  	 WHERE bcno = #{ bcNo }
 	</update> 
 	
   <delete id="deleteFreeBoardComment" parameterType="int">
   DELETE 
   FROM
   		boardcomment 
   WHERE 
   		bcno = #{ bcNo }
   </delete>
   
	<select id="getFreeBoardCount" parameterType="integer" resultType="int">
 	SELECT 
 	COUNT (bdno)
 	FROM 
 		board 
 	WHERE 
 	BDTYPE = #{ bdtype } AND bdBlindCheck = 0
 	</select>
 	<select id="getFreeBoardSearchCount" parameterType="hashMap" resultType="int">
 	SELECT 
 	COUNT (bdno)
 	FROM 
 		board 
 	WHERE 
 	BDTYPE = #{ bdtype } 
 	<if test="search == 'bdTitle'">
 	AND BDTITLE LIKE '%'|| #{searchdata} ||'%'
 	</if>
 	<if test="search == 'bdWriter'">
 	AND BDWRITER LIKE '%'|| #{searchdata} ||'%'
 	</if>
 	AND bdBlindCheck = 0
 	</select>
	
	<!--  게시글 수정 (편집)?   -->
 	<update id="updateFreeBoard"  parameterType="board">
 	UPDATE 
 		board
 	SET bdtitle = #{ bdTitle } , bdcontent = #{ bdContent }
 	WHERE bdno = #{ bdNo }
 	</update> 
 	
 	<!--  게시판 글 blindcheck기능-->
 	<!-- 3회가 되면 블라인드처리가 되게 하려면 이곳에서 조건을 정해주어야 하나??
 	blind된 글은 jquery써서 못읽게 alert를 뜨게하기??? -->
	<update id="deleteFreeBoard" parameterType="int" >
	UPDATE BOARD SET BDREPORTINGCOUNT = '1' WHERE bdno = #{ bdno }
	</update>
	
	<update id="updateFreeBoardReadCount" parameterType="int" >
	   UPDATE
	   		board
	   SET bdreadcount = bdreadcount + 1
	   		
	   WHERE bdno = #{ bdno }
   </update>
   
   <!-- <select id="getBoard" resultMap="boardResult">
		SELECT
			bdno, bdtype, bdcontent, bdwriter, bdtitle, bdreadcount, bddate, bdreportingcount, bdreportingcount
		FROM Board
		ORDER BY 
			bdno DESC
	</select> -->
	
</mapper>
