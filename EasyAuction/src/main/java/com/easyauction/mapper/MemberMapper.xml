<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- namespace : 패키지명.클래스이름 을 논리적으로 선언 -->
<mapper namespace="com.easyauction.mapper.MemberMapper">
<!-- <resultMap id="memberResult" type="Member">
			<id column="mbId" property="mbId" />
			<result column="mbAddress1" property="mbAddress1" />
			<result column="mbAddress2" property="mbAddress2" />
			<result column="mbPhone1" property="mbPhone1" />
			<result column="mbPhone2" property="mbPhone2" />
			<result column="mbGender" property="mbGender" />
			<result column="mbBirthDate" property="mbBirthDate" />
			<result column="mbGrade" property="mbGrade" />
			<result column="mbReportingCount" property="mbReportingCount" />
			<result column="mbName" property="mbName" />
			<result column="mbGrant" property="mbGrant" />
			<result column="mbDelete" property="mbDelete" />
			<result column="mbRegdate" property="mbRegdate" />
			<result column="mbEmail" property="mbEmail" />
		</resultMap> -->
	<sql id="membercolumns">
		mbId,
		mbAddress1,
		mbAddress2,
		mbPhone1,
		mbPhone2,
		mbGender,
		mbBirthDate,
		mbGrade,
		mbReportingCount,
		mbName,
		mbGrant,
		mbDelete,
		mbRegdate,
		mbEmail
		</sql>

	
<select id="getMemberByIdAndPasswd" resultType="Member">
		SELECT <include refid="membercolumns" />
		FROM member 
		WHERE mbId = #{mbId} 
		AND 
		mbPasswd = #{mbPasswd} AND mbDelete = 0
</select>  
<select id="getCountByMemberId" parameterType="String" resultType="integer">
		SELECT Count(*) 
		FROM member 
		WHERE mbId = #{mbId} AND mbDelete = 0
</select>
<select id="getMemberById" resultType="Member">
		SELECT <include refid="membercolumns" />
		FROM member 
		WHERE mbId = #{mbId} AND mbDelete = 0
</select>
<insert id="setRegisterMember" parameterType="Member">
	INSERT INTO Member(
			mbId,
			mbPasswd,
			mbAddress1,
			mbAddress2,
			mbPhone1,
			mbPhone2,
			mbGender,
			mbBirthDate,
			mbName,
			mbEmail
		)
		VALUES(
			#{ mbId },
			#{ mbPasswd },
			#{ mbAddress1 },
			#{ mbAddress2 },
			#{ mbPhone1 },
			#{ mbPhone2 },
			#{ mbGender },
			#{ mbBirthDate },
			#{ mbName },
			#{ mbEmail }
		)
</insert>
<update id="setEditMember" parameterType="Member">
	UPDATE member SET 
		<if test="mbPasswd != null and mbPasswd != ''">
		mbPasswd	=	#{ mbPasswd },
		</if>
		<if test="mbAddress1 != null">
		mbAddress1	=	#{ mbAddress1 },
		</if>
		<if test="mbAddress2 != null">
		mbAddress2	=	#{ mbAddress2 },
		</if>
		<if test="mbPhone1 != null and mbPasswd != ''">
		mbPhone1	=	#{ mbPhone1 },
		</if>
		<if test="mbPhone2 != null">
		mbPhone2	=	#{ mbPhone2 },
		</if>
		<if test="mbGender == true">
		mbGender	=	'0',
		</if>
		<if test="mbGender == false">
		mbGender	=	'1',
		</if>
		<if test="mbBirthDate != null">
		mbBirthDate	=	#{ mbBirthDate },
		</if>
		<if test="mbName != null">
		mbName	=	#{ mbName },
		</if>
		<if test="mbGrade != null and mbGrade != ''">
		mbGrade	=	#{ mbGrade },
		</if>
		<if test="mbEmail != null and mbEmail != ''">
		mbEmail	=	#{ mbEmail }
		</if>
	WHERE mbId = #{ mbId }
</update>
<select id="getCountByMemberEmail" parameterType="hashmap" resultType="integer">
		SELECT Count(*) 
		FROM member 
		WHERE mbEmail = #{ email } AND mbDelete = 0
		<if test="mbId != ''">
		AND mbId = #{mbId} AND mbDelete = 0 
		</if>
		<if test="mbPasswd != ''">
		AND mbPasswd = #{mbPasswd}
		</if>
</select>
<select id="getMemberByEmail" parameterType="hashmap" resultType="Member">
		SELECT <include refid="membercolumns" />
		FROM member 
		WHERE mbEmail = #{ email }  AND mbDelete = 0 
		<if test="mbId != null">
		AND mbId = #{mbId} 
		</if>
		<if test="mbPasswd != null">
		AND mbPasswd = #{mbPasswd}
		</if>
</select>
<update id="setMemberReportingUpdate" parameterType="String">
	UPDATE member SET 
		mbReportingCount = (select mbReportingCount from Member WHERE mbId= #{ targetmbId }) +1
	WHERE mbId = #{ targetmbId }
</update>
<update id="setMemberDelete" parameterType="String">
	UPDATE member SET 
		mbDelete = '1' 
	WHERE mbId = #{ mbId }
</update>


<select id="getMemberAddressList" resultType="Member">
	select <include refid="membercolumns"></include>
	from member
</select>



<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~옥션 데이터관련~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<resultMap type="Auction" id="auctionResult">
		<id column="aucno" property="aucNo" />
		<result column="auctitle" property="aucTitle" />
		<result column="aucstartdate" property="aucStartDate" />
		<result column="aucenddate" property="aucEndDate" />
		<result column="aucitemname" property="aucItemName" />
		<result column="auccategory" property="aucCategory" />
		<result column="aucdetail" property="aucDetail" />
		<result column="aucstartprice" property="aucStartPrice" />
		<result column="aucfinalprice" property="aucFinalPrice" />
		<result column="aucstate" property="aucState" />
		<result column="aucregdate" property="aucRegdate" />
		<result column="aucreportingcount" property="aucReportingCount" />
		<result column="aucblindcheck" property="aucBlindCheck" />
		<result column="auctype" property="aucType" />
		<result column="aucreadcount" property="aucReadCount" />
		<result column="aucwriter" property="aucWriter" />
		<result column="aucadtext" property="aucAdText" />
 		<association property="countBidders" column="aucno" select="getCountBidders" />
		<association property="bidding" column="aucno" select="getBiddingInfoByAucNo" />
		<collection property="auctionImage" column="aucno" select="getAuctionImageByAuctionNo" />
	</resultMap>
	
	<resultMap type="auctionImage" id="auctionImageResult">
		<id column="aucimgno" property="aucImgNo"/>
		<result column="aucimgname" property="aucImgName" />
		<result column="aucno" property="aucNo" />
		<result column="aucimgregdate" property="aucImgRegdate" />
	</resultMap>

	<resultMap type="Bidding" id="biddingResult">
 		<id column="bidno" property="bidNo" />
		<result column="bidgettercheck" property="bidGetterCheck" />
		<result column="aucno" property="aucNo" />
		<result column="bidprice" property="bidPrice" />
		<result column="mbid" property="mbId" />
		<result column="biddate" property="bidDate" />
	</resultMap>
	<sql id="auctioncolumns">
			 aucno, auctitle, aucstartdate, aucenddate, 
			 aucitemname, auccategory, aucdetail, aucstartprice, 
			 aucfinalprice, aucstate, aucregdate, aucreportingcount,
			 aucblindcheck, auctype, aucreadcount, aucwriter, aucadtext
	</sql>
 	
 	<select id="getCountBidders" resultType="int" parameterType="int">
		select count(*) from bidding where aucno= #{aucNo}
	</select>
	<select id="getBiddingInfoByAucNo" resultMap="biddingResult" parameterType="int">
		select bidprice, mbid
		from bidding
		where aucno = #{ aucNo } and bidprice = (select max(bidprice) from bidding where aucno= #{aucNo})
	</select>
	
	<select id="getAuctionImageByAuctionNo" resultMap="auctionImageResult" parameterType="int">
		select aucimgno, aucimgname, aucno
		from AUCTIONIMAGE
		where aucno = #{ aucNo }
	</select>
	
	<select id="getMyAuctionListBymbId" resultMap="auctionResult" parameterType="String">
		select aucno, auctitle, aucstartdate, aucenddate, aucregdate, 
			 aucitemname, auccategory, aucdetail, aucstartprice, aucstate, auctype, aucwriter, aucadtext
		from AUCTION 
		Where aucwriter = #{ mbId } 
		order By
		aucno DESC
	</select>
<!-- 	<resultMap id="countResultMap" type="java.util.HashMap">
		  <result property="auclistcount" column="auclistcount"/>
		  <result property="aucstate0" column="aucstate0"/>
		  <result property="aucstate1" column="aucstate1"/>
		  <result property="aucstate2" column="aucstate2"/>
	</resultMap> -->

	
 	<select id="getCountMyAuctionBymbId" resultType="hashmap" parameterType="String">
		select 
			(select count(*) from AUCTION Where aucwriter = #{ mbId }) auclistcount,
			(select count(*) from AUCTION Where aucstate = 0 and aucwriter = #{ mbId }) aucstate0,
			(select count(*) from AUCTION Where aucstate = 1 and aucwriter = #{ mbId }) aucstate1, 
			(select count(*) from AUCTION Where aucstate = 2 and aucwriter = #{ mbId }) aucstate2 
		from dual
	</select>
	<select id="getGetterAuctionListBymbId" resultType="Auction" parameterType="String">
		select aucno, auctitle, aucenddate, aucfinalprice, aucstate, aucwriter 
		from AUCTION 
		Where aucgetter = #{ mbId } 
		order By
		aucno DESC
	</select>
	
	
	
	
	
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~옥션 데이터관련~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	
</mapper>
